cache:
  - '%LOCALAPPDATA%\pip\Cache'

platform:
  - x64

environment:
  CYGWIN_DIR: 'C:\\cygwin64'
  matrix:
    - PYTHON_DIR: "C:\\Python34-x64"
      TOXENV: py34

    - PYTHON_DIR: "C:\\Python35-x64"
      TOXENV: py35

install:
  # Add Python to PATH
  - "SET PATH=%PYTHON_DIR%;%PYTHON_DIR%\\Scripts;%PATH%"

  # Add CYGWIN to PATH
  - "SET PATH=%CYGWIN_DIR%\\bin;%PATH%"
  - "SET BORG_OPENSSL_PREFIX=%CYGWIN_DIR%"
  - "SET BORG_LZ4_PREFIX=%CYGWIN_DIR%"

  - "python --version"
  - "virtualenv --version"

  # Installing Dependencies using nuget
  - "%CYGWIN_DIR%\\setup-x86_64.exe -q -P libopenssl -P openssl-devel -P liblz4_1 -P liblz4-devel"
  - ps: 'ls %CYGWIN_DIR%'

  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  - "pip install --disable-pip-version-check --user --upgrade pip"

  # Install the build dependencies of the project. If some dependencies contain
  # compiled extensions and are not provided as pre-built wheel packages,
  # pip will build them from source using the MSVC compiler matching the
  # target Python version and architecture
  - "pip install -r requirements.d/development.txt"
  - "pip install -e ."

  # Create build virtualenv
  - "virtualenv --clear %VENV_TEST_DIR%"
  - "%VENV_TEST_DIR%\\Scripts\\activate.bat"

  # Print Python info
  - "python ci\\info_platform.py"
  - "pip freeze"

test_script:
  - "tox -r"